## Example configuration file. This file will be overwritten
## everytime you perfomrs an install

# Classes to recognize
[RECOG]
TITLE: BP4D-Female (48x48 input image)

# Emotion / Identity
TYPE:   Identity

#   Emotion     CK     BP4D
#   neutral     0                       PLEASE NOTE THIS IS IMPLICIT
#   anger       1       ?
#   contempt    2       ? (Relief)
#   disgust     3
#   fear        4       ?
#   happy       5       ? (Joy)
#   sadness     6       ?
#   surprise    7

# Which AU need to be identified (AU 0 is given by default and points to the neutral AU / emotion)
# Contempt: [14]
# Fear:     [20] 25 1 4 5
# Sadness:  17 1 4 [15]
# Anger:    4 17 [23] [24] 7
# suprise:  25 1 [2] [27] 5
# Happy:    25 [12] [6]
# Disgust:  [9] 17 4 7

# CLASS Number (see table above, note neutral automatic) / AU Number
CLASS: 1, 2, 4, 6, 7, 10, 12, 14, 15, 17, 23
#CLASS: 1, 2, 3, 4, 5, 6, 7

# CK / BP4D
DATABASE: BP4D

#AU: 6, 10, 12, 14, 17
#AU: 1, 2, 4, 6, 7, 10, 12, 14, 15, 17, 23
#AU: 1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 38, 43, 44, 45, 54, 61, 62, 63, 64

#limit images per shot / au
TRAIN_LIMIT: 100
VALIDATE_LIMIT: 20


[TRAINING]
# Folder containing the raw images (should contain a subfolder for each classes to recognize)
IMAGES:     training/images
# Folder containing the cropped faces (should contain a subfolder for each classes to recognize)
FACES:      training/faces
# Folder containing the features calculated for each face image.
# Should have a first layer of subfolder named as classes to recognize, and inside each 
# class subfolder should contains a folder for each face image that belongs to that class
FEATURES:   training/features


[VALIDATION]
# Folder containing the raw images (should contain a subfolder for each classes to recognize)
IMAGES:     validation/images
# Folder containing the cropped faces (should contain a subfolder for each classes to recognize)
FACES:      validation/faces
# Folder containing the features calculated for each face image.
# Should have a first layer of subfolder named as classes to recognize, and inside each 
# class subfolder should contains a folder for each face image that belongs to that class
FEATURES:   validation/features

# This folder holds information about 
DATA:       validation/data

[FOLDER]
# Folder containing the csv files of the features for training set and validation set (one file per classifier)
TRAIN:      trainfiles
# Folder containing the trained classifiers (auspiciously should be opencv .xml files)
CLASSIFIER: classifiers
CLASSIFIER_ADA: classifiers/ada
CLASSIFIER_SVM: classifiers/svm

[SUFFIX]
# Suffix of the folder which contains Gabor filtered images
FILTERED_FOLDER:  _feats
# Suffix of the file containing features in csv format
FEATURE_FILE:     _feats.csv

[FACECROP]
TOOL:               ../facecrop_cli
FACE_DETECTOR_CFG:  ../../resources/haarcascade_frontalface_default.xml
EYE_DETECTOR_CFG:   ../../resources/haarcascade_eye.xml

[SIZE]
# Size of the images before features extraction
width:    48
height:   48

[GABOR]
TOOL:           ../gaborbank_cli
FILTER_FILE:    NA
FEAT_FNAME:     gabor.yml
NWIDTHS:        1
NLAMBDAS:       5
NTHETAS:        6

[TRAIN]
# Write samples features directly in the csv file prepared for training, this way is possible to use CvMLData.read_csv for 
# loading sample data. If "False" do not embed any feature in the csv file, instead specify the file path where to find 
# the feature matrix of the sample.
TOOL:           ../train_cli
ADA_CPU_USAGE:      1
ADA_FILTER_FNAME:   adaboost_featselection.dat
SVM_CPU_USAGE:      1
SVM_FILTER_FNAME:   svm_featselection.dat

[DETECTION]
TOOL:   ../au_detector_cli

[GUI]
#TOOL: ./emotimegui_cli
